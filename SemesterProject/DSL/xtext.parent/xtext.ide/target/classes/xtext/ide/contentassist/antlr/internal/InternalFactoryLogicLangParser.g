/*
 * generated by Xtext 2.25.0
 */
parser grammar InternalFactoryLogicLangParser;

options {
	tokenVocab=InternalFactoryLogicLangLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package xtext.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import xtext.services.FactoryLogicLangGrammarAccess;

}
@members {
	private FactoryLogicLangGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("As", "'as'");
		tokenNameToValue.put("At", "'at'");
		tokenNameToValue.put("If", "'if'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("Is", "'is'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("For", "'for'");
		tokenNameToValue.put("Not", "'not'");
		tokenNameToValue.put("Red", "'red'");
		tokenNameToValue.put("Blue", "'blue'");
		tokenNameToValue.put("Drop", "'drop'");
		tokenNameToValue.put("Each", "'each'");
		tokenNameToValue.put("Full", "'full'");
		tokenNameToValue.put("Hour", "'hour'");
		tokenNameToValue.put("Into", "'into'");
		tokenNameToValue.put("Item", "'item'");
		tokenNameToValue.put("Mark", "'mark'");
		tokenNameToValue.put("Move", "'move'");
		tokenNameToValue.put("Scan", "'scan'");
		tokenNameToValue.put("Slot", "'slot'");
		tokenNameToValue.put("That", "'that'");
		tokenNameToValue.put("Then", "'then'");
		tokenNameToValue.put("With", "'with'");
		tokenNameToValue.put("Color", "'color'");
		tokenNameToValue.put("Crane", "'crane'");
		tokenNameToValue.put("Empty", "'empty'");
		tokenNameToValue.put("Equal", "'equal'");
		tokenNameToValue.put("Green", "'green'");
		tokenNameToValue.put("Hours", "'hours'");
		tokenNameToValue.put("Named", "'named'");
		tokenNameToValue.put("Slots", "'slots'");
		tokenNameToValue.put("Camera", "'camera'");
		tokenNameToValue.put("Create", "'create'");
		tokenNameToValue.put("Minute", "'minute'");
		tokenNameToValue.put("Pickup", "'pickup'");
		tokenNameToValue.put("Second", "'second'");
		tokenNameToValue.put("Minutes", "'minutes'");
		tokenNameToValue.put("Seconds", "'seconds'");
		tokenNameToValue.put("Storage", "'storage'");
		tokenNameToValue.put("Finished", "'finished'");
		tokenNameToValue.put("Position", "'position'");
		tokenNameToValue.put("LessThan", "'less than'");
		tokenNameToValue.put("GreaterThan", "'greater than'");
	}

	public void setGrammarAccess(FactoryLogicLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getModelAccess().getDeclarationsAssignment()); }
			(rule__Model__DeclarationsAssignment)
			{ after(grammarAccess.getModelAccess().getDeclarationsAssignment()); }
		)
		(
			{ before(grammarAccess.getModelAccess().getDeclarationsAssignment()); }
			(rule__Model__DeclarationsAssignment)*
			{ after(grammarAccess.getModelAccess().getDeclarationsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDevice
entryRuleDevice
:
{ before(grammarAccess.getDeviceRule()); }
	 ruleDevice
{ after(grammarAccess.getDeviceRule()); } 
	 EOF 
;

// Rule Device
ruleDevice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceAccess().getAlternatives()); }
		(rule__Device__Alternatives)
		{ after(grammarAccess.getDeviceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCrane
entryRuleCrane
:
{ before(grammarAccess.getCraneRule()); }
	 ruleCrane
{ after(grammarAccess.getCraneRule()); } 
	 EOF 
;

// Rule Crane
ruleCrane 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCraneAccess().getGroup()); }
		(rule__Crane__Group__0)
		{ after(grammarAccess.getCraneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCraneParameter
entryRuleCraneParameter
:
{ before(grammarAccess.getCraneParameterRule()); }
	 ruleCraneParameter
{ after(grammarAccess.getCraneParameterRule()); } 
	 EOF 
;

// Rule CraneParameter
ruleCraneParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCraneParameterAccess().getGroup()); }
		(rule__CraneParameter__Group__0)
		{ after(grammarAccess.getCraneParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStorage
entryRuleStorage
:
{ before(grammarAccess.getStorageRule()); }
	 ruleStorage
{ after(grammarAccess.getStorageRule()); } 
	 EOF 
;

// Rule Storage
ruleStorage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorageAccess().getGroup()); }
		(rule__Storage__Group__0)
		{ after(grammarAccess.getStorageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStorageParameter
entryRuleStorageParameter
:
{ before(grammarAccess.getStorageParameterRule()); }
	 ruleStorageParameter
{ after(grammarAccess.getStorageParameterRule()); } 
	 EOF 
;

// Rule StorageParameter
ruleStorageParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorageParameterAccess().getAlternatives()); }
		(rule__StorageParameter__Alternatives)
		{ after(grammarAccess.getStorageParameterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStorageSlotParameter
entryRuleStorageSlotParameter
:
{ before(grammarAccess.getStorageSlotParameterRule()); }
	 ruleStorageSlotParameter
{ after(grammarAccess.getStorageSlotParameterRule()); } 
	 EOF 
;

// Rule StorageSlotParameter
ruleStorageSlotParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorageSlotParameterAccess().getGroup()); }
		(rule__StorageSlotParameter__Group__0)
		{ after(grammarAccess.getStorageSlotParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStoragePositionParameter
entryRuleStoragePositionParameter
:
{ before(grammarAccess.getStoragePositionParameterRule()); }
	 ruleStoragePositionParameter
{ after(grammarAccess.getStoragePositionParameterRule()); } 
	 EOF 
;

// Rule StoragePositionParameter
ruleStoragePositionParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoragePositionParameterAccess().getGroup()); }
		(rule__StoragePositionParameter__Group__0)
		{ after(grammarAccess.getStoragePositionParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCamera
entryRuleCamera
:
{ before(grammarAccess.getCameraRule()); }
	 ruleCamera
{ after(grammarAccess.getCameraRule()); } 
	 EOF 
;

// Rule Camera
ruleCamera 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCameraAccess().getGroup()); }
		(rule__Camera__Group__0)
		{ after(grammarAccess.getCameraAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCameraParameter
entryRuleCameraParameter
:
{ before(grammarAccess.getCameraParameterRule()); }
	 ruleCameraParameter
{ after(grammarAccess.getCameraParameterRule()); } 
	 EOF 
;

// Rule CameraParameter
ruleCameraParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCameraParameterAccess().getGroup()); }
		(rule__CameraParameter__Group__0)
		{ after(grammarAccess.getCameraParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogic
entryRuleLogic
:
{ before(grammarAccess.getLogicRule()); }
	 ruleLogic
{ after(grammarAccess.getLogicRule()); } 
	 EOF 
;

// Rule Logic
ruleLogic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicAccess().getAlternatives()); }
		(rule__Logic__Alternatives)
		{ after(grammarAccess.getLogicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeviceConditional
entryRuleDeviceConditional
:
{ before(grammarAccess.getDeviceConditionalRule()); }
	 ruleDeviceConditional
{ after(grammarAccess.getDeviceConditionalRule()); } 
	 EOF 
;

// Rule DeviceConditional
ruleDeviceConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getGroup()); }
		(rule__DeviceConditional__Group__0)
		{ after(grammarAccess.getDeviceConditionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableConditional
entryRuleVariableConditional
:
{ before(grammarAccess.getVariableConditionalRule()); }
	 ruleVariableConditional
{ after(grammarAccess.getVariableConditionalRule()); } 
	 EOF 
;

// Rule VariableConditional
ruleVariableConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getGroup()); }
		(rule__VariableConditional__Group__0)
		{ after(grammarAccess.getVariableConditionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberConditional
entryRuleNumberConditional
:
{ before(grammarAccess.getNumberConditionalRule()); }
	 ruleNumberConditional
{ after(grammarAccess.getNumberConditionalRule()); } 
	 EOF 
;

// Rule NumberConditional
ruleNumberConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberConditionalAccess().getGroup()); }
		(rule__NumberConditional__Group__0)
		{ after(grammarAccess.getNumberConditionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoop
entryRuleLoop
:
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopAccess().getGroup()); }
		(rule__Loop__Group__0)
		{ after(grammarAccess.getLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getAlternatives()); }
		(rule__Operation__Alternatives)
		{ after(grammarAccess.getOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStorageMoveEmptySlot
entryRuleStorageMoveEmptySlot
:
{ before(grammarAccess.getStorageMoveEmptySlotRule()); }
	 ruleStorageMoveEmptySlot
{ after(grammarAccess.getStorageMoveEmptySlotRule()); } 
	 EOF 
;

// Rule StorageMoveEmptySlot
ruleStorageMoveEmptySlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorageMoveEmptySlotAccess().getGroup()); }
		(rule__StorageMoveEmptySlot__Group__0)
		{ after(grammarAccess.getStorageMoveEmptySlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStorageMoveVariableSlot
entryRuleStorageMoveVariableSlot
:
{ before(grammarAccess.getStorageMoveVariableSlotRule()); }
	 ruleStorageMoveVariableSlot
{ after(grammarAccess.getStorageMoveVariableSlotRule()); } 
	 EOF 
;

// Rule StorageMoveVariableSlot
ruleStorageMoveVariableSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorageMoveVariableSlotAccess().getGroup()); }
		(rule__StorageMoveVariableSlot__Group__0)
		{ after(grammarAccess.getStorageMoveVariableSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStorageMoveSlot
entryRuleStorageMoveSlot
:
{ before(grammarAccess.getStorageMoveSlotRule()); }
	 ruleStorageMoveSlot
{ after(grammarAccess.getStorageMoveSlotRule()); } 
	 EOF 
;

// Rule StorageMoveSlot
ruleStorageMoveSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorageMoveSlotAccess().getGroup()); }
		(rule__StorageMoveSlot__Group__0)
		{ after(grammarAccess.getStorageMoveSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStorageMarkSlot
entryRuleStorageMarkSlot
:
{ before(grammarAccess.getStorageMarkSlotRule()); }
	 ruleStorageMarkSlot
{ after(grammarAccess.getStorageMarkSlotRule()); } 
	 EOF 
;

// Rule StorageMarkSlot
ruleStorageMarkSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getGroup()); }
		(rule__StorageMarkSlot__Group__0)
		{ after(grammarAccess.getStorageMarkSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCameraScan
entryRuleCameraScan
:
{ before(grammarAccess.getCameraScanRule()); }
	 ruleCameraScan
{ after(grammarAccess.getCameraScanRule()); } 
	 EOF 
;

// Rule CameraScan
ruleCameraScan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCameraScanAccess().getGroup()); }
		(rule__CameraScan__Group__0)
		{ after(grammarAccess.getCameraScanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoopVariable
entryRuleLoopVariable
:
{ before(grammarAccess.getLoopVariableRule()); }
	 ruleLoopVariable
{ after(grammarAccess.getLoopVariableRule()); } 
	 EOF 
;

// Rule LoopVariable
ruleLoopVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopVariableAccess().getGroup()); }
		(rule__LoopVariable__Group__0)
		{ after(grammarAccess.getLoopVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGloablVariable
entryRuleGloablVariable
:
{ before(grammarAccess.getGloablVariableRule()); }
	 ruleGloablVariable
{ after(grammarAccess.getGloablVariableRule()); } 
	 EOF 
;

// Rule GloablVariable
ruleGloablVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGloablVariableAccess().getGroup()); }
		(rule__GloablVariable__Group__0)
		{ after(grammarAccess.getGloablVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCranePickup
entryRuleCranePickup
:
{ before(grammarAccess.getCranePickupRule()); }
	 ruleCranePickup
{ after(grammarAccess.getCranePickupRule()); } 
	 EOF 
;

// Rule CranePickup
ruleCranePickup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCranePickupAccess().getGroup()); }
		(rule__CranePickup__Group__0)
		{ after(grammarAccess.getCranePickupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCraneDrop
entryRuleCraneDrop
:
{ before(grammarAccess.getCraneDropRule()); }
	 ruleCraneDrop
{ after(grammarAccess.getCraneDropRule()); } 
	 EOF 
;

// Rule CraneDrop
ruleCraneDrop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCraneDropAccess().getGroup()); }
		(rule__CraneDrop__Group__0)
		{ after(grammarAccess.getCraneDropAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule COLOR
ruleCOLOR
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOLORAccess().getAlternatives()); }
		(rule__COLOR__Alternatives)
		{ after(grammarAccess.getCOLORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CONST_VARIABLES
ruleCONST_VARIABLES
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONST_VARIABLESAccess().getAlternatives()); }
		(rule__CONST_VARIABLES__Alternatives)
		{ after(grammarAccess.getCONST_VARIABLESAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BOOLEAN_OPERATOR
ruleBOOLEAN_OPERATOR
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getAlternatives()); }
		(rule__BOOLEAN_OPERATOR__Alternatives)
		{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TIME
ruleTIME
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIMEAccess().getAlternatives()); }
		(rule__TIME__Alternatives)
		{ after(grammarAccess.getTIMEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getDeviceParserRuleCall_0()); }
		ruleDevice
		{ after(grammarAccess.getDeclarationAccess().getDeviceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getLogicParserRuleCall_1()); }
		ruleLogic
		{ after(grammarAccess.getDeclarationAccess().getLogicParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getCraneParserRuleCall_0()); }
		ruleCrane
		{ after(grammarAccess.getDeviceAccess().getCraneParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceAccess().getStorageParserRuleCall_1()); }
		ruleStorage
		{ after(grammarAccess.getDeviceAccess().getStorageParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceAccess().getCameraParserRuleCall_2()); }
		ruleCamera
		{ after(grammarAccess.getDeviceAccess().getCameraParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageParameter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageParameterAccess().getStoragePositionParameterParserRuleCall_0()); }
		ruleStoragePositionParameter
		{ after(grammarAccess.getStorageParameterAccess().getStoragePositionParameterParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStorageParameterAccess().getStorageSlotParameterParserRuleCall_1()); }
		ruleStorageSlotParameter
		{ after(grammarAccess.getStorageParameterAccess().getStorageSlotParameterParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getDeviceConditionalParserRuleCall_0()); }
		ruleDeviceConditional
		{ after(grammarAccess.getLogicAccess().getDeviceConditionalParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicAccess().getNumberConditionalParserRuleCall_1()); }
		ruleNumberConditional
		{ after(grammarAccess.getLogicAccess().getNumberConditionalParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicAccess().getVariableConditionalParserRuleCall_2()); }
		ruleVariableConditional
		{ after(grammarAccess.getLogicAccess().getVariableConditionalParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicAccess().getLoopParserRuleCall_3()); }
		ruleLoop
		{ after(grammarAccess.getLogicAccess().getLoopParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogicAccess().getOperationParserRuleCall_4()); }
		ruleOperation
		{ after(grammarAccess.getLogicAccess().getOperationParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getComparison_constAssignment_4_0()); }
		(rule__DeviceConditional__Comparison_constAssignment_4_0)
		{ after(grammarAccess.getDeviceConditionalAccess().getComparison_constAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getComparison_colorAssignment_4_1()); }
		(rule__DeviceConditional__Comparison_colorAssignment_4_1)
		{ after(grammarAccess.getDeviceConditionalAccess().getComparison_colorAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getComparison_intAssignment_4_2()); }
		(rule__DeviceConditional__Comparison_intAssignment_4_2)
		{ after(grammarAccess.getDeviceConditionalAccess().getComparison_intAssignment_4_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getComparison_constAssignment_4_0()); }
		(rule__VariableConditional__Comparison_constAssignment_4_0)
		{ after(grammarAccess.getVariableConditionalAccess().getComparison_constAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableConditionalAccess().getComparison_colorAssignment_4_1()); }
		(rule__VariableConditional__Comparison_colorAssignment_4_1)
		{ after(grammarAccess.getVariableConditionalAccess().getComparison_colorAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableConditionalAccess().getComparison_intAssignment_4_2()); }
		(rule__VariableConditional__Comparison_intAssignment_4_2)
		{ after(grammarAccess.getVariableConditionalAccess().getComparison_intAssignment_4_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberConditionalAccess().getComparison_constAssignment_6_0()); }
		(rule__NumberConditional__Comparison_constAssignment_6_0)
		{ after(grammarAccess.getNumberConditionalAccess().getComparison_constAssignment_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberConditionalAccess().getComparison_colorAssignment_6_1()); }
		(rule__NumberConditional__Comparison_colorAssignment_6_1)
		{ after(grammarAccess.getNumberConditionalAccess().getComparison_colorAssignment_6_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumberConditionalAccess().getComparison_intAssignment_6_2()); }
		(rule__NumberConditional__Comparison_intAssignment_6_2)
		{ after(grammarAccess.getNumberConditionalAccess().getComparison_intAssignment_6_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Alternatives_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getComparison_constAssignment_8_0()); }
		(rule__Loop__Comparison_constAssignment_8_0)
		{ after(grammarAccess.getLoopAccess().getComparison_constAssignment_8_0()); }
	)
	|
	(
		{ before(grammarAccess.getLoopAccess().getComparison_colorAssignment_8_1()); }
		(rule__Loop__Comparison_colorAssignment_8_1)
		{ after(grammarAccess.getLoopAccess().getComparison_colorAssignment_8_1()); }
	)
	|
	(
		{ before(grammarAccess.getLoopAccess().getComparison_intAssignment_8_2()); }
		(rule__Loop__Comparison_intAssignment_8_2)
		{ after(grammarAccess.getLoopAccess().getComparison_intAssignment_8_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getStorageMoveEmptySlotParserRuleCall_0()); }
		ruleStorageMoveEmptySlot
		{ after(grammarAccess.getOperationAccess().getStorageMoveEmptySlotParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getStorageMoveSlotParserRuleCall_1()); }
		ruleStorageMoveSlot
		{ after(grammarAccess.getOperationAccess().getStorageMoveSlotParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getStorageMarkSlotParserRuleCall_2()); }
		ruleStorageMarkSlot
		{ after(grammarAccess.getOperationAccess().getStorageMarkSlotParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getStorageMoveVariableSlotParserRuleCall_3()); }
		ruleStorageMoveVariableSlot
		{ after(grammarAccess.getOperationAccess().getStorageMoveVariableSlotParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getCameraScanParserRuleCall_4()); }
		ruleCameraScan
		{ after(grammarAccess.getOperationAccess().getCameraScanParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getCranePickupParserRuleCall_5()); }
		ruleCranePickup
		{ after(grammarAccess.getOperationAccess().getCranePickupParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getCraneDropParserRuleCall_6()); }
		ruleCraneDrop
		{ after(grammarAccess.getOperationAccess().getCraneDropParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getComparison_variableAssignment_6_0()); }
		(rule__StorageMarkSlot__Comparison_variableAssignment_6_0)
		{ after(grammarAccess.getStorageMarkSlotAccess().getComparison_variableAssignment_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getComparison_constAssignment_6_1()); }
		(rule__StorageMarkSlot__Comparison_constAssignment_6_1)
		{ after(grammarAccess.getStorageMarkSlotAccess().getComparison_constAssignment_6_1()); }
	)
	|
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getComparison_colorAssignment_6_2()); }
		(rule__StorageMarkSlot__Comparison_colorAssignment_6_2)
		{ after(grammarAccess.getStorageMarkSlotAccess().getComparison_colorAssignment_6_2()); }
	)
	|
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getComparison_intAssignment_6_3()); }
		(rule__StorageMarkSlot__Comparison_intAssignment_6_3)
		{ after(grammarAccess.getStorageMarkSlotAccess().getComparison_intAssignment_6_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COLOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0()); }
		(Red)
		{ after(grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_1()); }
		(Blue)
		{ after(grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_2()); }
		(Green)
		{ after(grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONST_VARIABLES__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONST_VARIABLESAccess().getFULLEnumLiteralDeclaration_0()); }
		(Full)
		{ after(grammarAccess.getCONST_VARIABLESAccess().getFULLEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCONST_VARIABLESAccess().getFINISHEDEnumLiteralDeclaration_1()); }
		(Finished)
		{ after(grammarAccess.getCONST_VARIABLESAccess().getFINISHEDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCONST_VARIABLESAccess().getEMPTYEnumLiteralDeclaration_2()); }
		(Empty)
		{ after(grammarAccess.getCONST_VARIABLESAccess().getEMPTYEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_OPERATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getNOTEnumLiteralDeclaration_0()); }
		(Not)
		{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getNOTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getLESSEnumLiteralDeclaration_1()); }
		(LessThan)
		{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getLESSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getGREATEREnumLiteralDeclaration_2()); }
		(GreaterThan)
		{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getGREATEREnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIME__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_0()); }
		(Seconds)
		{ after(grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1()); }
		(Second)
		{ after(grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_2()); }
		(Minutes)
		{ after(grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3()); }
		(Minute)
		{ after(grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_4()); }
		(Hours)
		{ after(grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5()); }
		(Hour)
		{ after(grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__0__Impl
	rule__Crane__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getCreateKeyword_0()); }
	Create
	{ after(grammarAccess.getCraneAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__1__Impl
	rule__Crane__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getCraneKeyword_1()); }
	Crane
	{ after(grammarAccess.getCraneAccess().getCraneKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__2__Impl
	rule__Crane__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getNamedKeyword_2()); }
	Named
	{ after(grammarAccess.getCraneAccess().getNamedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__3__Impl
	rule__Crane__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getNameAssignment_3()); }
	(rule__Crane__NameAssignment_3)
	{ after(grammarAccess.getCraneAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__4__Impl
	rule__Crane__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getCraneAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__5__Impl
	rule__Crane__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCraneAccess().getParametersAssignment_5()); }
		(rule__Crane__ParametersAssignment_5)
		{ after(grammarAccess.getCraneAccess().getParametersAssignment_5()); }
	)
	(
		{ before(grammarAccess.getCraneAccess().getParametersAssignment_5()); }
		(rule__Crane__ParametersAssignment_5)*
		{ after(grammarAccess.getCraneAccess().getParametersAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getCraneAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CraneParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneParameter__Group__0__Impl
	rule__CraneParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneParameterAccess().getWithKeyword_0()); }
	With
	{ after(grammarAccess.getCraneParameterAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneParameter__Group__1__Impl
	rule__CraneParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneParameterAccess().getPositionKeyword_1()); }
	Position
	{ after(grammarAccess.getCraneParameterAccess().getPositionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneParameter__Group__2__Impl
	rule__CraneParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneParameterAccess().getAtKeyword_2()); }
	At
	{ after(grammarAccess.getCraneParameterAccess().getAtKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneParameter__Group__3__Impl
	rule__CraneParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneParameterAccess().getDegreeAssignment_3()); }
	(rule__CraneParameter__DegreeAssignment_3)
	{ after(grammarAccess.getCraneParameterAccess().getDegreeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneParameter__Group__4__Impl
	rule__CraneParameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneParameterAccess().getNamedKeyword_4()); }
	Named
	{ after(grammarAccess.getCraneParameterAccess().getNamedKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneParameter__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneParameterAccess().getNameAssignment_5()); }
	(rule__CraneParameter__NameAssignment_5)
	{ after(grammarAccess.getCraneParameterAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Storage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Storage__Group__0__Impl
	rule__Storage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageAccess().getCreateKeyword_0()); }
	Create
	{ after(grammarAccess.getStorageAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Storage__Group__1__Impl
	rule__Storage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageAccess().getStorageKeyword_1()); }
	Storage
	{ after(grammarAccess.getStorageAccess().getStorageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Storage__Group__2__Impl
	rule__Storage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageAccess().getNamedKeyword_2()); }
	Named
	{ after(grammarAccess.getStorageAccess().getNamedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Storage__Group__3__Impl
	rule__Storage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageAccess().getNameAssignment_3()); }
	(rule__Storage__NameAssignment_3)
	{ after(grammarAccess.getStorageAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Storage__Group__4__Impl
	rule__Storage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getStorageAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Storage__Group__5__Impl
	rule__Storage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStorageAccess().getParametersAssignment_5()); }
		(rule__Storage__ParametersAssignment_5)
		{ after(grammarAccess.getStorageAccess().getParametersAssignment_5()); }
	)
	(
		{ before(grammarAccess.getStorageAccess().getParametersAssignment_5()); }
		(rule__Storage__ParametersAssignment_5)*
		{ after(grammarAccess.getStorageAccess().getParametersAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Storage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getStorageAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StorageSlotParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageSlotParameter__Group__0__Impl
	rule__StorageSlotParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageSlotParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageSlotParameterAccess().getWithKeyword_0()); }
	With
	{ after(grammarAccess.getStorageSlotParameterAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageSlotParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageSlotParameter__Group__1__Impl
	rule__StorageSlotParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageSlotParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageSlotParameterAccess().getSlotsAssignment_1()); }
	(rule__StorageSlotParameter__SlotsAssignment_1)
	{ after(grammarAccess.getStorageSlotParameterAccess().getSlotsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageSlotParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageSlotParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageSlotParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageSlotParameterAccess().getSlotsKeyword_2()); }
	Slots
	{ after(grammarAccess.getStorageSlotParameterAccess().getSlotsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoragePositionParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoragePositionParameter__Group__0__Impl
	rule__StoragePositionParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoragePositionParameterAccess().getWithKeyword_0()); }
	With
	{ after(grammarAccess.getStoragePositionParameterAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoragePositionParameter__Group__1__Impl
	rule__StoragePositionParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoragePositionParameterAccess().getPositionKeyword_1()); }
	Position
	{ after(grammarAccess.getStoragePositionParameterAccess().getPositionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoragePositionParameter__Group__2__Impl
	rule__StoragePositionParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoragePositionParameterAccess().getAtKeyword_2()); }
	At
	{ after(grammarAccess.getStoragePositionParameterAccess().getAtKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoragePositionParameter__Group__3__Impl
	rule__StoragePositionParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoragePositionParameterAccess().getSlotKeyword_3()); }
	Slot
	{ after(grammarAccess.getStoragePositionParameterAccess().getSlotKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoragePositionParameter__Group__4__Impl
	rule__StoragePositionParameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoragePositionParameterAccess().getSlotAssignment_4()); }
	(rule__StoragePositionParameter__SlotAssignment_4)
	{ after(grammarAccess.getStoragePositionParameterAccess().getSlotAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoragePositionParameter__Group__5__Impl
	rule__StoragePositionParameter__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoragePositionParameterAccess().getNamedKeyword_5()); }
	Named
	{ after(grammarAccess.getStoragePositionParameterAccess().getNamedKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoragePositionParameter__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoragePositionParameterAccess().getNameAssignment_6()); }
	(rule__StoragePositionParameter__NameAssignment_6)
	{ after(grammarAccess.getStoragePositionParameterAccess().getNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Camera__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__0__Impl
	rule__Camera__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getCreateKeyword_0()); }
	Create
	{ after(grammarAccess.getCameraAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__1__Impl
	rule__Camera__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getCameraKeyword_1()); }
	Camera
	{ after(grammarAccess.getCameraAccess().getCameraKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__2__Impl
	rule__Camera__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getNamedKeyword_2()); }
	Named
	{ after(grammarAccess.getCameraAccess().getNamedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__3__Impl
	rule__Camera__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getNameAssignment_3()); }
	(rule__Camera__NameAssignment_3)
	{ after(grammarAccess.getCameraAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__4__Impl
	rule__Camera__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getCameraAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__5__Impl
	rule__Camera__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCameraAccess().getParametersAssignment_5()); }
		(rule__Camera__ParametersAssignment_5)
		{ after(grammarAccess.getCameraAccess().getParametersAssignment_5()); }
	)
	(
		{ before(grammarAccess.getCameraAccess().getParametersAssignment_5()); }
		(rule__Camera__ParametersAssignment_5)*
		{ after(grammarAccess.getCameraAccess().getParametersAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getCameraAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CameraParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraParameter__Group__0__Impl
	rule__CameraParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraParameterAccess().getWithKeyword_0()); }
	With
	{ after(grammarAccess.getCameraParameterAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraParameter__Group__1__Impl
	rule__CameraParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraParameterAccess().getColorKeyword_1()); }
	Color
	{ after(grammarAccess.getCameraParameterAccess().getColorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraParameterAccess().getColorAssignment_2()); }
	(rule__CameraParameter__ColorAssignment_2)
	{ after(grammarAccess.getCameraParameterAccess().getColorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeviceConditional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__0__Impl
	rule__DeviceConditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getIfKeyword_0()); }
	If
	{ after(grammarAccess.getDeviceConditionalAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__1__Impl
	rule__DeviceConditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getSourceAssignment_1()); }
	(rule__DeviceConditional__SourceAssignment_1)
	{ after(grammarAccess.getDeviceConditionalAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__2__Impl
	rule__DeviceConditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getDeviceConditionalAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__3__Impl
	rule__DeviceConditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getOperatorAssignment_3()); }
	(rule__DeviceConditional__OperatorAssignment_3)?
	{ after(grammarAccess.getDeviceConditionalAccess().getOperatorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__4__Impl
	rule__DeviceConditional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getAlternatives_4()); }
	(rule__DeviceConditional__Alternatives_4)
	{ after(grammarAccess.getDeviceConditionalAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__5__Impl
	rule__DeviceConditional__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getThenKeyword_5()); }
	Then
	{ after(grammarAccess.getDeviceConditionalAccess().getThenKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__6__Impl
	rule__DeviceConditional__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getBEGINTerminalRuleCall_6()); }
	RULE_BEGIN
	{ after(grammarAccess.getDeviceConditionalAccess().getBEGINTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__7__Impl
	rule__DeviceConditional__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getLogicsAssignment_7()); }
		(rule__DeviceConditional__LogicsAssignment_7)
		{ after(grammarAccess.getDeviceConditionalAccess().getLogicsAssignment_7()); }
	)
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getLogicsAssignment_7()); }
		(rule__DeviceConditional__LogicsAssignment_7)*
		{ after(grammarAccess.getDeviceConditionalAccess().getLogicsAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getENDTerminalRuleCall_8()); }
	RULE_END
	{ after(grammarAccess.getDeviceConditionalAccess().getENDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableConditional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__0__Impl
	rule__VariableConditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getIfKeyword_0()); }
	If
	{ after(grammarAccess.getVariableConditionalAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__1__Impl
	rule__VariableConditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getSourceAssignment_1()); }
	(rule__VariableConditional__SourceAssignment_1)
	{ after(grammarAccess.getVariableConditionalAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__2__Impl
	rule__VariableConditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getVariableConditionalAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__3__Impl
	rule__VariableConditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getOperatorAssignment_3()); }
	(rule__VariableConditional__OperatorAssignment_3)?
	{ after(grammarAccess.getVariableConditionalAccess().getOperatorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__4__Impl
	rule__VariableConditional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getAlternatives_4()); }
	(rule__VariableConditional__Alternatives_4)
	{ after(grammarAccess.getVariableConditionalAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__5__Impl
	rule__VariableConditional__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getThenKeyword_5()); }
	Then
	{ after(grammarAccess.getVariableConditionalAccess().getThenKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__6__Impl
	rule__VariableConditional__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getBEGINTerminalRuleCall_6()); }
	RULE_BEGIN
	{ after(grammarAccess.getVariableConditionalAccess().getBEGINTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__7__Impl
	rule__VariableConditional__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getVariableConditionalAccess().getLogicsAssignment_7()); }
		(rule__VariableConditional__LogicsAssignment_7)
		{ after(grammarAccess.getVariableConditionalAccess().getLogicsAssignment_7()); }
	)
	(
		{ before(grammarAccess.getVariableConditionalAccess().getLogicsAssignment_7()); }
		(rule__VariableConditional__LogicsAssignment_7)*
		{ after(grammarAccess.getVariableConditionalAccess().getLogicsAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getENDTerminalRuleCall_8()); }
	RULE_END
	{ after(grammarAccess.getVariableConditionalAccess().getENDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberConditional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__0__Impl
	rule__NumberConditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getIfKeyword_0()); }
	If
	{ after(grammarAccess.getNumberConditionalAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__1__Impl
	rule__NumberConditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getSource_intAssignment_1()); }
	(rule__NumberConditional__Source_intAssignment_1)
	{ after(grammarAccess.getNumberConditionalAccess().getSource_intAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__2__Impl
	rule__NumberConditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getNumberConditionalAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__3__Impl
	rule__NumberConditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getOperatorAssignment_3()); }
	(rule__NumberConditional__OperatorAssignment_3)?
	{ after(grammarAccess.getNumberConditionalAccess().getOperatorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__4__Impl
	rule__NumberConditional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getEqualKeyword_4()); }
	Equal
	{ after(grammarAccess.getNumberConditionalAccess().getEqualKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__5__Impl
	rule__NumberConditional__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getToKeyword_5()); }
	To
	{ after(grammarAccess.getNumberConditionalAccess().getToKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__6__Impl
	rule__NumberConditional__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getAlternatives_6()); }
	(rule__NumberConditional__Alternatives_6)
	{ after(grammarAccess.getNumberConditionalAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__7__Impl
	rule__NumberConditional__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getThenKeyword_7()); }
	Then
	{ after(grammarAccess.getNumberConditionalAccess().getThenKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__8__Impl
	rule__NumberConditional__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getBEGINTerminalRuleCall_8()); }
	RULE_BEGIN
	{ after(grammarAccess.getNumberConditionalAccess().getBEGINTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__9__Impl
	rule__NumberConditional__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getNumberConditionalAccess().getLogicsAssignment_9()); }
		(rule__NumberConditional__LogicsAssignment_9)
		{ after(grammarAccess.getNumberConditionalAccess().getLogicsAssignment_9()); }
	)
	(
		{ before(grammarAccess.getNumberConditionalAccess().getLogicsAssignment_9()); }
		(rule__NumberConditional__LogicsAssignment_9)*
		{ after(grammarAccess.getNumberConditionalAccess().getLogicsAssignment_9()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberConditional__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberConditionalAccess().getENDTerminalRuleCall_10()); }
	RULE_END
	{ after(grammarAccess.getNumberConditionalAccess().getENDTerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__0__Impl
	rule__Loop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getForKeyword_0()); }
	For
	{ after(grammarAccess.getLoopAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__1__Impl
	rule__Loop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getVariableAssignment_1()); }
	(rule__Loop__VariableAssignment_1)
	{ after(grammarAccess.getLoopAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__2__Impl
	rule__Loop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getInKeyword_2()); }
	In
	{ after(grammarAccess.getLoopAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__3__Impl
	rule__Loop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getListAssignment_3()); }
	(rule__Loop__ListAssignment_3)
	{ after(grammarAccess.getLoopAccess().getListAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__4__Impl
	rule__Loop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getGroup_4()); }
	(rule__Loop__Group_4__0)?
	{ after(grammarAccess.getLoopAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__5__Impl
	rule__Loop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getThatKeyword_5()); }
	That
	{ after(grammarAccess.getLoopAccess().getThatKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__6__Impl
	rule__Loop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getIsKeyword_6()); }
	Is
	{ after(grammarAccess.getLoopAccess().getIsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__7__Impl
	rule__Loop__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getOperatorAssignment_7()); }
	(rule__Loop__OperatorAssignment_7)?
	{ after(grammarAccess.getLoopAccess().getOperatorAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__8__Impl
	rule__Loop__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getAlternatives_8()); }
	(rule__Loop__Alternatives_8)
	{ after(grammarAccess.getLoopAccess().getAlternatives_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__9__Impl
	rule__Loop__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getThenKeyword_9()); }
	Then
	{ after(grammarAccess.getLoopAccess().getThenKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__10__Impl
	rule__Loop__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getBEGINTerminalRuleCall_10()); }
	RULE_BEGIN
	{ after(grammarAccess.getLoopAccess().getBEGINTerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__11__Impl
	rule__Loop__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLoopAccess().getLogicsAssignment_11()); }
		(rule__Loop__LogicsAssignment_11)
		{ after(grammarAccess.getLoopAccess().getLogicsAssignment_11()); }
	)
	(
		{ before(grammarAccess.getLoopAccess().getLogicsAssignment_11()); }
		(rule__Loop__LogicsAssignment_11)*
		{ after(grammarAccess.getLoopAccess().getLogicsAssignment_11()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getENDTerminalRuleCall_12()); }
	RULE_END
	{ after(grammarAccess.getLoopAccess().getENDTerminalRuleCall_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group_4__0__Impl
	rule__Loop__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getOfKeyword_4_0()); }
	Of
	{ after(grammarAccess.getLoopAccess().getOfKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getSourceAssignment_4_1()); }
	(rule__Loop__SourceAssignment_4_1)
	{ after(grammarAccess.getLoopAccess().getSourceAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StorageMoveEmptySlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveEmptySlot__Group__0__Impl
	rule__StorageMoveEmptySlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveEmptySlotAccess().getDeviceAssignment_0()); }
	(rule__StorageMoveEmptySlot__DeviceAssignment_0)
	{ after(grammarAccess.getStorageMoveEmptySlotAccess().getDeviceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveEmptySlot__Group__1__Impl
	rule__StorageMoveEmptySlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveEmptySlotAccess().getMoveKeyword_1()); }
	Move
	{ after(grammarAccess.getStorageMoveEmptySlotAccess().getMoveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveEmptySlot__Group__2__Impl
	rule__StorageMoveEmptySlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveEmptySlotAccess().getEmptyKeyword_2()); }
	Empty
	{ after(grammarAccess.getStorageMoveEmptySlotAccess().getEmptyKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveEmptySlot__Group__3__Impl
	rule__StorageMoveEmptySlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveEmptySlotAccess().getSlotKeyword_3()); }
	Slot
	{ after(grammarAccess.getStorageMoveEmptySlotAccess().getSlotKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveEmptySlot__Group__4__Impl
	rule__StorageMoveEmptySlot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveEmptySlotAccess().getToKeyword_4()); }
	To
	{ after(grammarAccess.getStorageMoveEmptySlotAccess().getToKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveEmptySlot__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveEmptySlotAccess().getDestinationAssignment_5()); }
	(rule__StorageMoveEmptySlot__DestinationAssignment_5)
	{ after(grammarAccess.getStorageMoveEmptySlotAccess().getDestinationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StorageMoveVariableSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveVariableSlot__Group__0__Impl
	rule__StorageMoveVariableSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveVariableSlotAccess().getDeviceAssignment_0()); }
	(rule__StorageMoveVariableSlot__DeviceAssignment_0)
	{ after(grammarAccess.getStorageMoveVariableSlotAccess().getDeviceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveVariableSlot__Group__1__Impl
	rule__StorageMoveVariableSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveVariableSlotAccess().getMoveKeyword_1()); }
	Move
	{ after(grammarAccess.getStorageMoveVariableSlotAccess().getMoveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveVariableSlot__Group__2__Impl
	rule__StorageMoveVariableSlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveVariableSlotAccess().getSlotKeyword_2()); }
	Slot
	{ after(grammarAccess.getStorageMoveVariableSlotAccess().getSlotKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveVariableSlot__Group__3__Impl
	rule__StorageMoveVariableSlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveVariableSlotAccess().getOfKeyword_3()); }
	Of
	{ after(grammarAccess.getStorageMoveVariableSlotAccess().getOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveVariableSlot__Group__4__Impl
	rule__StorageMoveVariableSlot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveVariableSlotAccess().getPositionAssignment_4()); }
	(rule__StorageMoveVariableSlot__PositionAssignment_4)
	{ after(grammarAccess.getStorageMoveVariableSlotAccess().getPositionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveVariableSlot__Group__5__Impl
	rule__StorageMoveVariableSlot__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveVariableSlotAccess().getToKeyword_5()); }
	To
	{ after(grammarAccess.getStorageMoveVariableSlotAccess().getToKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveVariableSlot__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveVariableSlotAccess().getDestinationAssignment_6()); }
	(rule__StorageMoveVariableSlot__DestinationAssignment_6)
	{ after(grammarAccess.getStorageMoveVariableSlotAccess().getDestinationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StorageMoveSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveSlot__Group__0__Impl
	rule__StorageMoveSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveSlotAccess().getDeviceAssignment_0()); }
	(rule__StorageMoveSlot__DeviceAssignment_0)
	{ after(grammarAccess.getStorageMoveSlotAccess().getDeviceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveSlot__Group__1__Impl
	rule__StorageMoveSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveSlotAccess().getMoveKeyword_1()); }
	Move
	{ after(grammarAccess.getStorageMoveSlotAccess().getMoveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveSlot__Group__2__Impl
	rule__StorageMoveSlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveSlotAccess().getSlotKeyword_2()); }
	Slot
	{ after(grammarAccess.getStorageMoveSlotAccess().getSlotKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveSlot__Group__3__Impl
	rule__StorageMoveSlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveSlotAccess().getAtKeyword_3()); }
	At
	{ after(grammarAccess.getStorageMoveSlotAccess().getAtKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveSlot__Group__4__Impl
	rule__StorageMoveSlot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveSlotAccess().getPositionAssignment_4()); }
	(rule__StorageMoveSlot__PositionAssignment_4)
	{ after(grammarAccess.getStorageMoveSlotAccess().getPositionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveSlot__Group__5__Impl
	rule__StorageMoveSlot__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveSlotAccess().getToKeyword_5()); }
	To
	{ after(grammarAccess.getStorageMoveSlotAccess().getToKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMoveSlot__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMoveSlotAccess().getDestinationAssignment_6()); }
	(rule__StorageMoveSlot__DestinationAssignment_6)
	{ after(grammarAccess.getStorageMoveSlotAccess().getDestinationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StorageMarkSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group__0__Impl
	rule__StorageMarkSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getDeviceAssignment_0()); }
	(rule__StorageMarkSlot__DeviceAssignment_0)
	{ after(grammarAccess.getStorageMarkSlotAccess().getDeviceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group__1__Impl
	rule__StorageMarkSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getMarkKeyword_1()); }
	Mark
	{ after(grammarAccess.getStorageMarkSlotAccess().getMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group__2__Impl
	rule__StorageMarkSlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getSlotKeyword_2()); }
	Slot
	{ after(grammarAccess.getStorageMarkSlotAccess().getSlotKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group__3__Impl
	rule__StorageMarkSlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getAtKeyword_3()); }
	At
	{ after(grammarAccess.getStorageMarkSlotAccess().getAtKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group__4__Impl
	rule__StorageMarkSlot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getPositionAssignment_4()); }
	(rule__StorageMarkSlot__PositionAssignment_4)
	{ after(grammarAccess.getStorageMarkSlotAccess().getPositionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group__5__Impl
	rule__StorageMarkSlot__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getAsKeyword_5()); }
	As
	{ after(grammarAccess.getStorageMarkSlotAccess().getAsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group__6__Impl
	rule__StorageMarkSlot__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getAlternatives_6()); }
	(rule__StorageMarkSlot__Alternatives_6)
	{ after(grammarAccess.getStorageMarkSlotAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getGroup_7()); }
	(rule__StorageMarkSlot__Group_7__0)?
	{ after(grammarAccess.getStorageMarkSlotAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StorageMarkSlot__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group_7__0__Impl
	rule__StorageMarkSlot__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getInKeyword_7_0()); }
	In
	{ after(grammarAccess.getStorageMarkSlotAccess().getInKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group_7__1__Impl
	rule__StorageMarkSlot__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getQuantityAssignment_7_1()); }
	(rule__StorageMarkSlot__QuantityAssignment_7_1)
	{ after(grammarAccess.getStorageMarkSlotAccess().getQuantityAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StorageMarkSlot__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStorageMarkSlotAccess().getMeasureAssignment_7_2()); }
	(rule__StorageMarkSlot__MeasureAssignment_7_2)
	{ after(grammarAccess.getStorageMarkSlotAccess().getMeasureAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CameraScan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScan__Group__0__Impl
	rule__CameraScan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanAccess().getDeviceAssignment_0()); }
	(rule__CameraScan__DeviceAssignment_0)
	{ after(grammarAccess.getCameraScanAccess().getDeviceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScan__Group__1__Impl
	rule__CameraScan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanAccess().getScanKeyword_1()); }
	Scan
	{ after(grammarAccess.getCameraScanAccess().getScanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScan__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScan__Group__2__Impl
	rule__CameraScan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScan__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanAccess().getColorKeyword_2()); }
	Color
	{ after(grammarAccess.getCameraScanAccess().getColorKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScan__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScan__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScan__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanAccess().getVariableAssignment_3()); }
	(rule__CameraScan__VariableAssignment_3)
	{ after(grammarAccess.getCameraScanAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopVariable__Group__0__Impl
	rule__LoopVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopVariableAccess().getEachKeyword_0()); }
	Each
	{ after(grammarAccess.getLoopVariableAccess().getEachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopVariableAccess().getNameAssignment_1()); }
	(rule__LoopVariable__NameAssignment_1)
	{ after(grammarAccess.getLoopVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GloablVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GloablVariable__Group__0__Impl
	rule__GloablVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GloablVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGloablVariableAccess().getIntoKeyword_0()); }
	Into
	{ after(grammarAccess.getGloablVariableAccess().getIntoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GloablVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GloablVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GloablVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGloablVariableAccess().getNameAssignment_1()); }
	(rule__GloablVariable__NameAssignment_1)
	{ after(grammarAccess.getGloablVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CranePickup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickup__Group__0__Impl
	rule__CranePickup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupAccess().getDeviceAssignment_0()); }
	(rule__CranePickup__DeviceAssignment_0)
	{ after(grammarAccess.getCranePickupAccess().getDeviceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickup__Group__1__Impl
	rule__CranePickup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupAccess().getPickupKeyword_1()); }
	Pickup
	{ after(grammarAccess.getCranePickupAccess().getPickupKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickup__Group__2__Impl
	rule__CranePickup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupAccess().getItemKeyword_2()); }
	Item
	{ after(grammarAccess.getCranePickupAccess().getItemKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickup__Group__3__Impl
	rule__CranePickup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupAccess().getAtKeyword_3()); }
	At
	{ after(grammarAccess.getCranePickupAccess().getAtKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickup__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupAccess().getLocationAssignment_4()); }
	(rule__CranePickup__LocationAssignment_4)
	{ after(grammarAccess.getCranePickupAccess().getLocationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CraneDrop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDrop__Group__0__Impl
	rule__CraneDrop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropAccess().getDeviceAssignment_0()); }
	(rule__CraneDrop__DeviceAssignment_0)
	{ after(grammarAccess.getCraneDropAccess().getDeviceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDrop__Group__1__Impl
	rule__CraneDrop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropAccess().getDropKeyword_1()); }
	Drop
	{ after(grammarAccess.getCraneDropAccess().getDropKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDrop__Group__2__Impl
	rule__CraneDrop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropAccess().getItemKeyword_2()); }
	Item
	{ after(grammarAccess.getCraneDropAccess().getItemKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDrop__Group__3__Impl
	rule__CraneDrop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropAccess().getAtKeyword_3()); }
	At
	{ after(grammarAccess.getCraneDropAccess().getAtKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDrop__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropAccess().getLocationAssignment_4()); }
	(rule__CraneDrop__LocationAssignment_4)
	{ after(grammarAccess.getCraneDropAccess().getLocationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__DeclarationsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0()); }
		ruleDeclaration
		{ after(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getCraneAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__ParametersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneAccess().getParametersCraneParameterParserRuleCall_5_0()); }
		ruleCraneParameter
		{ after(grammarAccess.getCraneAccess().getParametersCraneParameterParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__DegreeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneParameterAccess().getDegreeINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getCraneParameterAccess().getDegreeINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneParameter__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneParameterAccess().getNameSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getCraneParameterAccess().getNameSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getStorageAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage__ParametersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageAccess().getParametersStorageParameterParserRuleCall_5_0()); }
		ruleStorageParameter
		{ after(grammarAccess.getStorageAccess().getParametersStorageParameterParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageSlotParameter__SlotsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageSlotParameterAccess().getSlotsINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getStorageSlotParameterAccess().getSlotsINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__SlotAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoragePositionParameterAccess().getSlotINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getStoragePositionParameterAccess().getSlotINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoragePositionParameter__NameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoragePositionParameterAccess().getNameSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getStoragePositionParameterAccess().getNameSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getCameraAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__ParametersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraAccess().getParametersCameraParameterParserRuleCall_5_0()); }
		ruleCameraParameter
		{ after(grammarAccess.getCameraAccess().getParametersCameraParameterParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraParameter__ColorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraParameterAccess().getColorCOLOREnumRuleCall_2_0()); }
		ruleCOLOR
		{ after(grammarAccess.getCameraParameterAccess().getColorCOLOREnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getSourceDeviceCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDeviceConditionalAccess().getSourceDeviceSTRINGTerminalRuleCall_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getDeviceConditionalAccess().getSourceDeviceSTRINGTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDeviceConditionalAccess().getSourceDeviceCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__OperatorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_3_0()); }
		ruleBOOLEAN_OPERATOR
		{ after(grammarAccess.getDeviceConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Comparison_constAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_4_0_0()); }
		ruleCONST_VARIABLES
		{ after(grammarAccess.getDeviceConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Comparison_colorAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getComparison_colorCOLOREnumRuleCall_4_1_0()); }
		ruleCOLOR
		{ after(grammarAccess.getDeviceConditionalAccess().getComparison_colorCOLOREnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Comparison_intAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getComparison_intINTTerminalRuleCall_4_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDeviceConditionalAccess().getComparison_intINTTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__LogicsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getLogicsLogicParserRuleCall_7_0()); }
		ruleLogic
		{ after(grammarAccess.getDeviceConditionalAccess().getLogicsLogicParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getSourceVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableConditionalAccess().getSourceVariableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableConditionalAccess().getSourceVariableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableConditionalAccess().getSourceVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__OperatorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_3_0()); }
		ruleBOOLEAN_OPERATOR
		{ after(grammarAccess.getVariableConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Comparison_constAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_4_0_0()); }
		ruleCONST_VARIABLES
		{ after(grammarAccess.getVariableConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Comparison_colorAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getComparison_colorCOLOREnumRuleCall_4_1_0()); }
		ruleCOLOR
		{ after(grammarAccess.getVariableConditionalAccess().getComparison_colorCOLOREnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Comparison_intAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getComparison_intINTTerminalRuleCall_4_2_0()); }
		RULE_INT
		{ after(grammarAccess.getVariableConditionalAccess().getComparison_intINTTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__LogicsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getLogicsLogicParserRuleCall_7_0()); }
		ruleLogic
		{ after(grammarAccess.getVariableConditionalAccess().getLogicsLogicParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Source_intAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberConditionalAccess().getSource_intINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberConditionalAccess().getSource_intINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__OperatorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_3_0()); }
		ruleBOOLEAN_OPERATOR
		{ after(grammarAccess.getNumberConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Comparison_constAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_6_0_0()); }
		ruleCONST_VARIABLES
		{ after(grammarAccess.getNumberConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Comparison_colorAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberConditionalAccess().getComparison_colorCOLOREnumRuleCall_6_1_0()); }
		ruleCOLOR
		{ after(grammarAccess.getNumberConditionalAccess().getComparison_colorCOLOREnumRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__Comparison_intAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberConditionalAccess().getComparison_intINTTerminalRuleCall_6_2_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberConditionalAccess().getComparison_intINTTerminalRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConditional__LogicsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberConditionalAccess().getLogicsLogicParserRuleCall_9_0()); }
		ruleLogic
		{ after(grammarAccess.getNumberConditionalAccess().getLogicsLogicParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getVariableLoopVariableParserRuleCall_1_0()); }
		ruleLoopVariable
		{ after(grammarAccess.getLoopAccess().getVariableLoopVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__ListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getListIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getLoopAccess().getListIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__SourceAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getSourceDeviceCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getLoopAccess().getSourceDeviceSTRINGTerminalRuleCall_4_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getLoopAccess().getSourceDeviceSTRINGTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getLoopAccess().getSourceDeviceCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__OperatorAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_7_0()); }
		ruleBOOLEAN_OPERATOR
		{ after(grammarAccess.getLoopAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Comparison_constAssignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getComparison_constCONST_VARIABLESEnumRuleCall_8_0_0()); }
		ruleCONST_VARIABLES
		{ after(grammarAccess.getLoopAccess().getComparison_constCONST_VARIABLESEnumRuleCall_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Comparison_colorAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getComparison_colorCOLOREnumRuleCall_8_1_0()); }
		ruleCOLOR
		{ after(grammarAccess.getLoopAccess().getComparison_colorCOLOREnumRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Comparison_intAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getComparison_intINTTerminalRuleCall_8_2_0()); }
		RULE_INT
		{ after(grammarAccess.getLoopAccess().getComparison_intINTTerminalRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__LogicsAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getLogicsLogicParserRuleCall_11_0()); }
		ruleLogic
		{ after(grammarAccess.getLoopAccess().getLogicsLogicParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__DeviceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMoveEmptySlotAccess().getDeviceStorageCrossReference_0_0()); }
		(
			{ before(grammarAccess.getStorageMoveEmptySlotAccess().getDeviceStorageSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStorageMoveEmptySlotAccess().getDeviceStorageSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getStorageMoveEmptySlotAccess().getDeviceStorageCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveEmptySlot__DestinationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMoveEmptySlotAccess().getDestinationStoragePositionParameterCrossReference_5_0()); }
		(
			{ before(grammarAccess.getStorageMoveEmptySlotAccess().getDestinationStoragePositionParameterSTRINGTerminalRuleCall_5_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStorageMoveEmptySlotAccess().getDestinationStoragePositionParameterSTRINGTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getStorageMoveEmptySlotAccess().getDestinationStoragePositionParameterCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__DeviceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMoveVariableSlotAccess().getDeviceStorageCrossReference_0_0()); }
		(
			{ before(grammarAccess.getStorageMoveVariableSlotAccess().getDeviceStorageSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStorageMoveVariableSlotAccess().getDeviceStorageSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getStorageMoveVariableSlotAccess().getDeviceStorageCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__PositionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMoveVariableSlotAccess().getPositionVariableCrossReference_4_0()); }
		(
			{ before(grammarAccess.getStorageMoveVariableSlotAccess().getPositionVariableIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStorageMoveVariableSlotAccess().getPositionVariableIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getStorageMoveVariableSlotAccess().getPositionVariableCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveVariableSlot__DestinationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMoveVariableSlotAccess().getDestinationStoragePositionParameterCrossReference_6_0()); }
		(
			{ before(grammarAccess.getStorageMoveVariableSlotAccess().getDestinationStoragePositionParameterSTRINGTerminalRuleCall_6_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStorageMoveVariableSlotAccess().getDestinationStoragePositionParameterSTRINGTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getStorageMoveVariableSlotAccess().getDestinationStoragePositionParameterCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__DeviceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMoveSlotAccess().getDeviceStorageCrossReference_0_0()); }
		(
			{ before(grammarAccess.getStorageMoveSlotAccess().getDeviceStorageSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStorageMoveSlotAccess().getDeviceStorageSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getStorageMoveSlotAccess().getDeviceStorageCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__PositionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMoveSlotAccess().getPositionStoragePositionParameterCrossReference_4_0()); }
		(
			{ before(grammarAccess.getStorageMoveSlotAccess().getPositionStoragePositionParameterSTRINGTerminalRuleCall_4_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStorageMoveSlotAccess().getPositionStoragePositionParameterSTRINGTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getStorageMoveSlotAccess().getPositionStoragePositionParameterCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMoveSlot__DestinationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMoveSlotAccess().getDestinationStoragePositionParameterCrossReference_6_0()); }
		(
			{ before(grammarAccess.getStorageMoveSlotAccess().getDestinationStoragePositionParameterSTRINGTerminalRuleCall_6_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStorageMoveSlotAccess().getDestinationStoragePositionParameterSTRINGTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getStorageMoveSlotAccess().getDestinationStoragePositionParameterCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__DeviceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getDeviceStorageCrossReference_0_0()); }
		(
			{ before(grammarAccess.getStorageMarkSlotAccess().getDeviceStorageSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStorageMarkSlotAccess().getDeviceStorageSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getStorageMarkSlotAccess().getDeviceStorageCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__PositionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getPositionStoragePositionParameterCrossReference_4_0()); }
		(
			{ before(grammarAccess.getStorageMarkSlotAccess().getPositionStoragePositionParameterSTRINGTerminalRuleCall_4_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStorageMarkSlotAccess().getPositionStoragePositionParameterSTRINGTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getStorageMarkSlotAccess().getPositionStoragePositionParameterCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Comparison_variableAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getComparison_variableVariableCrossReference_6_0_0()); }
		(
			{ before(grammarAccess.getStorageMarkSlotAccess().getComparison_variableVariableIDTerminalRuleCall_6_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStorageMarkSlotAccess().getComparison_variableVariableIDTerminalRuleCall_6_0_0_1()); }
		)
		{ after(grammarAccess.getStorageMarkSlotAccess().getComparison_variableVariableCrossReference_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Comparison_constAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getComparison_constCONST_VARIABLESEnumRuleCall_6_1_0()); }
		ruleCONST_VARIABLES
		{ after(grammarAccess.getStorageMarkSlotAccess().getComparison_constCONST_VARIABLESEnumRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Comparison_colorAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getComparison_colorCOLOREnumRuleCall_6_2_0()); }
		ruleCOLOR
		{ after(grammarAccess.getStorageMarkSlotAccess().getComparison_colorCOLOREnumRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__Comparison_intAssignment_6_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getComparison_intINTTerminalRuleCall_6_3_0()); }
		RULE_INT
		{ after(grammarAccess.getStorageMarkSlotAccess().getComparison_intINTTerminalRuleCall_6_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__QuantityAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getQuantityINTTerminalRuleCall_7_1_0()); }
		RULE_INT
		{ after(grammarAccess.getStorageMarkSlotAccess().getQuantityINTTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StorageMarkSlot__MeasureAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorageMarkSlotAccess().getMeasureTIMEEnumRuleCall_7_2_0()); }
		ruleTIME
		{ after(grammarAccess.getStorageMarkSlotAccess().getMeasureTIMEEnumRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScan__DeviceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraScanAccess().getDeviceCameraCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCameraScanAccess().getDeviceCameraSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getCameraScanAccess().getDeviceCameraSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCameraScanAccess().getDeviceCameraCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScan__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraScanAccess().getVariableGloablVariableParserRuleCall_3_0()); }
		ruleGloablVariable
		{ after(grammarAccess.getCameraScanAccess().getVariableGloablVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLoopVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GloablVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGloablVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGloablVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__DeviceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCranePickupAccess().getDeviceCraneCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCranePickupAccess().getDeviceCraneSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getCranePickupAccess().getDeviceCraneSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCranePickupAccess().getDeviceCraneCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickup__LocationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCranePickupAccess().getLocationCraneParameterCrossReference_4_0()); }
		(
			{ before(grammarAccess.getCranePickupAccess().getLocationCraneParameterSTRINGTerminalRuleCall_4_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getCranePickupAccess().getLocationCraneParameterSTRINGTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getCranePickupAccess().getLocationCraneParameterCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__DeviceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneDropAccess().getDeviceCraneCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCraneDropAccess().getDeviceCraneSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getCraneDropAccess().getDeviceCraneSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCraneDropAccess().getDeviceCraneCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDrop__LocationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneDropAccess().getLocationCraneParameterCrossReference_4_0()); }
		(
			{ before(grammarAccess.getCraneDropAccess().getLocationCraneParameterSTRINGTerminalRuleCall_4_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getCraneDropAccess().getLocationCraneParameterSTRINGTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getCraneDropAccess().getLocationCraneParameterCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
