/**
 * generated by Xtext 2.25.0
 */
package xtext.factoryLogicLang;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see xtext.factoryLogicLang.FactoryLogicLangFactory
 * @model kind="package"
 * @generated
 */
public interface FactoryLogicLangPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "factoryLogicLang";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.FactoryLogicLang.xtext";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "factoryLogicLang";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  FactoryLogicLangPackage eINSTANCE = xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl.init();

  /**
   * The meta object id for the '{@link xtext.factoryLogicLang.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xtext.factoryLogicLang.impl.ModelImpl
   * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Declarations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__DECLARATIONS = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link xtext.factoryLogicLang.impl.DeclarationImpl <em>Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xtext.factoryLogicLang.impl.DeclarationImpl
   * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getDeclaration()
   * @generated
   */
  int DECLARATION = 1;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION__OPERATOR = 1;

  /**
   * The feature id for the '<em><b>Comparison</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION__COMPARISON = 2;

  /**
   * The number of structural features of the '<em>Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link xtext.factoryLogicLang.impl.ConditionalImpl <em>Conditional</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xtext.factoryLogicLang.impl.ConditionalImpl
   * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getConditional()
   * @generated
   */
  int CONDITIONAL = 2;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL__VARIABLE = DECLARATION__VARIABLE;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL__OPERATOR = DECLARATION__OPERATOR;

  /**
   * The feature id for the '<em><b>Comparison</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL__COMPARISON = DECLARATION__COMPARISON;

  /**
   * The number of structural features of the '<em>Conditional</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_FEATURE_COUNT = DECLARATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link xtext.factoryLogicLang.impl.LoopImpl <em>Loop</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xtext.factoryLogicLang.impl.LoopImpl
   * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getLoop()
   * @generated
   */
  int LOOP = 3;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP__VARIABLE = DECLARATION__VARIABLE;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP__OPERATOR = DECLARATION__OPERATOR;

  /**
   * The feature id for the '<em><b>Comparison</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP__COMPARISON = DECLARATION__COMPARISON;

  /**
   * The feature id for the '<em><b>Loopvar</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP__LOOPVAR = DECLARATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>STRING1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP__STRING1 = DECLARATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>STRING2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP__STRING2 = DECLARATION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Loop</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP_FEATURE_COUNT = DECLARATION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link xtext.factoryLogicLang.BOOLEAN_OPERATOR <em>BOOLEAN OPERATOR</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see xtext.factoryLogicLang.BOOLEAN_OPERATOR
   * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getBOOLEAN_OPERATOR()
   * @generated
   */
  int BOOLEAN_OPERATOR = 4;


  /**
   * Returns the meta object for class '{@link xtext.factoryLogicLang.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see xtext.factoryLogicLang.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link xtext.factoryLogicLang.Model#getDeclarations <em>Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Declarations</em>'.
   * @see xtext.factoryLogicLang.Model#getDeclarations()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Declarations();

  /**
   * Returns the meta object for class '{@link xtext.factoryLogicLang.Declaration <em>Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declaration</em>'.
   * @see xtext.factoryLogicLang.Declaration
   * @generated
   */
  EClass getDeclaration();

  /**
   * Returns the meta object for the attribute '{@link xtext.factoryLogicLang.Declaration#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Variable</em>'.
   * @see xtext.factoryLogicLang.Declaration#getVariable()
   * @see #getDeclaration()
   * @generated
   */
  EAttribute getDeclaration_Variable();

  /**
   * Returns the meta object for the attribute '{@link xtext.factoryLogicLang.Declaration#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see xtext.factoryLogicLang.Declaration#getOperator()
   * @see #getDeclaration()
   * @generated
   */
  EAttribute getDeclaration_Operator();

  /**
   * Returns the meta object for the attribute '{@link xtext.factoryLogicLang.Declaration#getComparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comparison</em>'.
   * @see xtext.factoryLogicLang.Declaration#getComparison()
   * @see #getDeclaration()
   * @generated
   */
  EAttribute getDeclaration_Comparison();

  /**
   * Returns the meta object for class '{@link xtext.factoryLogicLang.Conditional <em>Conditional</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditional</em>'.
   * @see xtext.factoryLogicLang.Conditional
   * @generated
   */
  EClass getConditional();

  /**
   * Returns the meta object for class '{@link xtext.factoryLogicLang.Loop <em>Loop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loop</em>'.
   * @see xtext.factoryLogicLang.Loop
   * @generated
   */
  EClass getLoop();

  /**
   * Returns the meta object for the attribute '{@link xtext.factoryLogicLang.Loop#getLoopvar <em>Loopvar</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Loopvar</em>'.
   * @see xtext.factoryLogicLang.Loop#getLoopvar()
   * @see #getLoop()
   * @generated
   */
  EAttribute getLoop_Loopvar();

  /**
   * Returns the meta object for the attribute '{@link xtext.factoryLogicLang.Loop#getSTRING1 <em>STRING1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>STRING1</em>'.
   * @see xtext.factoryLogicLang.Loop#getSTRING1()
   * @see #getLoop()
   * @generated
   */
  EAttribute getLoop_STRING1();

  /**
   * Returns the meta object for the attribute '{@link xtext.factoryLogicLang.Loop#getSTRING2 <em>STRING2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>STRING2</em>'.
   * @see xtext.factoryLogicLang.Loop#getSTRING2()
   * @see #getLoop()
   * @generated
   */
  EAttribute getLoop_STRING2();

  /**
   * Returns the meta object for enum '{@link xtext.factoryLogicLang.BOOLEAN_OPERATOR <em>BOOLEAN OPERATOR</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>BOOLEAN OPERATOR</em>'.
   * @see xtext.factoryLogicLang.BOOLEAN_OPERATOR
   * @generated
   */
  EEnum getBOOLEAN_OPERATOR();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  FactoryLogicLangFactory getFactoryLogicLangFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link xtext.factoryLogicLang.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xtext.factoryLogicLang.impl.ModelImpl
     * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Declarations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__DECLARATIONS = eINSTANCE.getModel_Declarations();

    /**
     * The meta object literal for the '{@link xtext.factoryLogicLang.impl.DeclarationImpl <em>Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xtext.factoryLogicLang.impl.DeclarationImpl
     * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getDeclaration()
     * @generated
     */
    EClass DECLARATION = eINSTANCE.getDeclaration();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECLARATION__VARIABLE = eINSTANCE.getDeclaration_Variable();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECLARATION__OPERATOR = eINSTANCE.getDeclaration_Operator();

    /**
     * The meta object literal for the '<em><b>Comparison</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECLARATION__COMPARISON = eINSTANCE.getDeclaration_Comparison();

    /**
     * The meta object literal for the '{@link xtext.factoryLogicLang.impl.ConditionalImpl <em>Conditional</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xtext.factoryLogicLang.impl.ConditionalImpl
     * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getConditional()
     * @generated
     */
    EClass CONDITIONAL = eINSTANCE.getConditional();

    /**
     * The meta object literal for the '{@link xtext.factoryLogicLang.impl.LoopImpl <em>Loop</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xtext.factoryLogicLang.impl.LoopImpl
     * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getLoop()
     * @generated
     */
    EClass LOOP = eINSTANCE.getLoop();

    /**
     * The meta object literal for the '<em><b>Loopvar</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOP__LOOPVAR = eINSTANCE.getLoop_Loopvar();

    /**
     * The meta object literal for the '<em><b>STRING1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOP__STRING1 = eINSTANCE.getLoop_STRING1();

    /**
     * The meta object literal for the '<em><b>STRING2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOP__STRING2 = eINSTANCE.getLoop_STRING2();

    /**
     * The meta object literal for the '{@link xtext.factoryLogicLang.BOOLEAN_OPERATOR <em>BOOLEAN OPERATOR</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see xtext.factoryLogicLang.BOOLEAN_OPERATOR
     * @see xtext.factoryLogicLang.impl.FactoryLogicLangPackageImpl#getBOOLEAN_OPERATOR()
     * @generated
     */
    EEnum BOOLEAN_OPERATOR = eINSTANCE.getBOOLEAN_OPERATOR();

  }

} //FactoryLogicLangPackage
