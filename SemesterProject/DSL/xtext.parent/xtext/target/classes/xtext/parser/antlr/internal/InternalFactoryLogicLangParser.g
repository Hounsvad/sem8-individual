/*
 * generated by Xtext 2.25.0
 */
parser grammar InternalFactoryLogicLangParser;

options {
	tokenVocab=InternalFactoryLogicLangLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xtext.services.FactoryLogicLangGrammarAccess;

}

@members {

 	private FactoryLogicLangGrammarAccess grammarAccess;

    public InternalFactoryLogicLangParser(TokenStream input, FactoryLogicLangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected FactoryLogicLangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0());
			}
			lv_declarations_0_0=ruleDeclaration
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"declarations",
					lv_declarations_0_0,
					"xtext.FactoryLogicLang.Declaration");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getDeviceParserRuleCall_0());
		}
		this_Device_0=ruleDevice
		{
			$current = $this_Device_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getLogicParserRuleCall_1());
		}
		this_Logic_1=ruleLogic
		{
			$current = $this_Logic_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getCraneParserRuleCall_0());
		}
		this_Crane_0=ruleCrane
		{
			$current = $this_Crane_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getStorageParserRuleCall_1());
		}
		this_Storage_1=ruleStorage
		{
			$current = $this_Storage_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getCameraParserRuleCall_2());
		}
		this_Camera_2=ruleCamera
		{
			$current = $this_Camera_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCrane
entryRuleCrane returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneRule()); }
	iv_ruleCrane=ruleCrane
	{ $current=$iv_ruleCrane.current; }
	EOF;

// Rule Crane
ruleCrane returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Create
		{
			newLeafNode(otherlv_0, grammarAccess.getCraneAccess().getCreateKeyword_0());
		}
		otherlv_1=Crane
		{
			newLeafNode(otherlv_1, grammarAccess.getCraneAccess().getCraneKeyword_1());
		}
		otherlv_2=Named
		{
			newLeafNode(otherlv_2, grammarAccess.getCraneAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getCraneAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getCraneAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCraneAccess().getParametersCraneParameterParserRuleCall_5_0());
				}
				lv_parameters_5_0=ruleCraneParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCraneRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_5_0,
						"xtext.FactoryLogicLang.CraneParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getCraneAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleCraneParameter
entryRuleCraneParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneParameterRule()); }
	iv_ruleCraneParameter=ruleCraneParameter
	{ $current=$iv_ruleCraneParameter.current; }
	EOF;

// Rule CraneParameter
ruleCraneParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=With
		{
			newLeafNode(otherlv_0, grammarAccess.getCraneParameterAccess().getWithKeyword_0());
		}
		otherlv_1=Position
		{
			newLeafNode(otherlv_1, grammarAccess.getCraneParameterAccess().getPositionKeyword_1());
		}
		otherlv_2=At
		{
			newLeafNode(otherlv_2, grammarAccess.getCraneParameterAccess().getAtKeyword_2());
		}
		(
			(
				lv_degree_3_0=RULE_INT
				{
					newLeafNode(lv_degree_3_0, grammarAccess.getCraneParameterAccess().getDegreeINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneParameterRule());
					}
					setWithLastConsumed(
						$current,
						"degree",
						lv_degree_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=Named
		{
			newLeafNode(otherlv_4, grammarAccess.getCraneParameterAccess().getNamedKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_STRING
				{
					newLeafNode(lv_name_5_0, grammarAccess.getCraneParameterAccess().getNameSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleStorage
entryRuleStorage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageRule()); }
	iv_ruleStorage=ruleStorage
	{ $current=$iv_ruleStorage.current; }
	EOF;

// Rule Storage
ruleStorage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Create
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageAccess().getCreateKeyword_0());
		}
		otherlv_1=Storage
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageAccess().getStorageKeyword_1());
		}
		otherlv_2=Named
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getStorageAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getStorageAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageAccess().getParametersStorageParameterParserRuleCall_5_0());
				}
				lv_parameters_5_0=ruleStorageParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_5_0,
						"xtext.FactoryLogicLang.StorageParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getStorageAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleStorageParameter
entryRuleStorageParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageParameterRule()); }
	iv_ruleStorageParameter=ruleStorageParameter
	{ $current=$iv_ruleStorageParameter.current; }
	EOF;

// Rule StorageParameter
ruleStorageParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStorageParameterAccess().getStoragePositionParameterParserRuleCall_0());
		}
		this_StoragePositionParameter_0=ruleStoragePositionParameter
		{
			$current = $this_StoragePositionParameter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStorageParameterAccess().getStorageSlotParameterParserRuleCall_1());
		}
		this_StorageSlotParameter_1=ruleStorageSlotParameter
		{
			$current = $this_StorageSlotParameter_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStorageSlotParameter
entryRuleStorageSlotParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageSlotParameterRule()); }
	iv_ruleStorageSlotParameter=ruleStorageSlotParameter
	{ $current=$iv_ruleStorageSlotParameter.current; }
	EOF;

// Rule StorageSlotParameter
ruleStorageSlotParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=With
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageSlotParameterAccess().getWithKeyword_0());
		}
		(
			(
				lv_slots_1_0=RULE_INT
				{
					newLeafNode(lv_slots_1_0, grammarAccess.getStorageSlotParameterAccess().getSlotsINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageSlotParameterRule());
					}
					setWithLastConsumed(
						$current,
						"slots",
						lv_slots_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2=Slots
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageSlotParameterAccess().getSlotsKeyword_2());
		}
	)
;

// Entry rule entryRuleStoragePositionParameter
entryRuleStoragePositionParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoragePositionParameterRule()); }
	iv_ruleStoragePositionParameter=ruleStoragePositionParameter
	{ $current=$iv_ruleStoragePositionParameter.current; }
	EOF;

// Rule StoragePositionParameter
ruleStoragePositionParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=With
		{
			newLeafNode(otherlv_0, grammarAccess.getStoragePositionParameterAccess().getWithKeyword_0());
		}
		otherlv_1=Position
		{
			newLeafNode(otherlv_1, grammarAccess.getStoragePositionParameterAccess().getPositionKeyword_1());
		}
		otherlv_2=At
		{
			newLeafNode(otherlv_2, grammarAccess.getStoragePositionParameterAccess().getAtKeyword_2());
		}
		otherlv_3=Slot
		{
			newLeafNode(otherlv_3, grammarAccess.getStoragePositionParameterAccess().getSlotKeyword_3());
		}
		(
			(
				lv_slot_4_0=RULE_INT
				{
					newLeafNode(lv_slot_4_0, grammarAccess.getStoragePositionParameterAccess().getSlotINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoragePositionParameterRule());
					}
					setWithLastConsumed(
						$current,
						"slot",
						lv_slot_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=Named
		{
			newLeafNode(otherlv_5, grammarAccess.getStoragePositionParameterAccess().getNamedKeyword_5());
		}
		(
			(
				lv_name_6_0=RULE_STRING
				{
					newLeafNode(lv_name_6_0, grammarAccess.getStoragePositionParameterAccess().getNameSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoragePositionParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCamera
entryRuleCamera returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraRule()); }
	iv_ruleCamera=ruleCamera
	{ $current=$iv_ruleCamera.current; }
	EOF;

// Rule Camera
ruleCamera returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Create
		{
			newLeafNode(otherlv_0, grammarAccess.getCameraAccess().getCreateKeyword_0());
		}
		otherlv_1=Camera
		{
			newLeafNode(otherlv_1, grammarAccess.getCameraAccess().getCameraKeyword_1());
		}
		otherlv_2=Named
		{
			newLeafNode(otherlv_2, grammarAccess.getCameraAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getCameraAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCameraRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getCameraAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraAccess().getParametersCameraParameterParserRuleCall_5_0());
				}
				lv_parameters_5_0=ruleCameraParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_5_0,
						"xtext.FactoryLogicLang.CameraParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getCameraAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleCameraParameter
entryRuleCameraParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraParameterRule()); }
	iv_ruleCameraParameter=ruleCameraParameter
	{ $current=$iv_ruleCameraParameter.current; }
	EOF;

// Rule CameraParameter
ruleCameraParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=With
		{
			newLeafNode(otherlv_0, grammarAccess.getCameraParameterAccess().getWithKeyword_0());
		}
		otherlv_1=Color
		{
			newLeafNode(otherlv_1, grammarAccess.getCameraParameterAccess().getColorKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraParameterAccess().getColorCOLOREnumRuleCall_2_0());
				}
				lv_color_2_0=ruleCOLOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraParameterRule());
					}
					set(
						$current,
						"color",
						lv_color_2_0,
						"xtext.FactoryLogicLang.COLOR");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLogic
entryRuleLogic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicRule()); }
	iv_ruleLogic=ruleLogic
	{ $current=$iv_ruleLogic.current; }
	EOF;

// Rule Logic
ruleLogic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicAccess().getDeviceConditionalParserRuleCall_0());
		}
		this_DeviceConditional_0=ruleDeviceConditional
		{
			$current = $this_DeviceConditional_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicAccess().getNumberConditionalParserRuleCall_1());
		}
		this_NumberConditional_1=ruleNumberConditional
		{
			$current = $this_NumberConditional_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicAccess().getVariableConditionalParserRuleCall_2());
		}
		this_VariableConditional_2=ruleVariableConditional
		{
			$current = $this_VariableConditional_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicAccess().getLoopParserRuleCall_3());
		}
		this_Loop_3=ruleLoop
		{
			$current = $this_Loop_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicAccess().getOperationParserRuleCall_4());
		}
		this_Operation_4=ruleOperation
		{
			$current = $this_Operation_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDeviceConditional
entryRuleDeviceConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceConditionalRule()); }
	iv_ruleDeviceConditional=ruleDeviceConditional
	{ $current=$iv_ruleDeviceConditional.current; }
	EOF;

// Rule DeviceConditional
ruleDeviceConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=If
		{
			newLeafNode(otherlv_0, grammarAccess.getDeviceConditionalAccess().getIfKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceConditionalRule());
					}
				}
				otherlv_1=RULE_STRING
				{
					newLeafNode(otherlv_1, grammarAccess.getDeviceConditionalAccess().getSourceDeviceCrossReference_1_0());
				}
			)
		)
		otherlv_2=Is
		{
			newLeafNode(otherlv_2, grammarAccess.getDeviceConditionalAccess().getIsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_3_0());
				}
				lv_operator_3_0=ruleBOOLEAN_OPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceConditionalRule());
					}
					set(
						$current,
						"operator",
						lv_operator_3_0,
						"xtext.FactoryLogicLang.BOOLEAN_OPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDeviceConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_4_0_0());
					}
					lv_comparison_const_4_0=ruleCONST_VARIABLES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeviceConditionalRule());
						}
						set(
							$current,
							"comparison_const",
							lv_comparison_const_4_0,
							"xtext.FactoryLogicLang.CONST_VARIABLES");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDeviceConditionalAccess().getComparison_colorCOLOREnumRuleCall_4_1_0());
					}
					lv_comparison_color_5_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeviceConditionalRule());
						}
						set(
							$current,
							"comparison_color",
							lv_comparison_color_5_0,
							"xtext.FactoryLogicLang.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_comparison_int_6_0=RULE_INT
					{
						newLeafNode(lv_comparison_int_6_0, grammarAccess.getDeviceConditionalAccess().getComparison_intINTTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeviceConditionalRule());
						}
						setWithLastConsumed(
							$current,
							"comparison_int",
							lv_comparison_int_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_7=Then
		{
			newLeafNode(otherlv_7, grammarAccess.getDeviceConditionalAccess().getThenKeyword_5());
		}
		this_BEGIN_8=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_8, grammarAccess.getDeviceConditionalAccess().getBEGINTerminalRuleCall_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceConditionalAccess().getLogicsLogicParserRuleCall_7_0());
				}
				lv_logics_9_0=ruleLogic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceConditionalRule());
					}
					add(
						$current,
						"logics",
						lv_logics_9_0,
						"xtext.FactoryLogicLang.Logic");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_10=RULE_END
		{
			newLeafNode(this_END_10, grammarAccess.getDeviceConditionalAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleVariableConditional
entryRuleVariableConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableConditionalRule()); }
	iv_ruleVariableConditional=ruleVariableConditional
	{ $current=$iv_ruleVariableConditional.current; }
	EOF;

// Rule VariableConditional
ruleVariableConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=If
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableConditionalAccess().getIfKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableConditionalRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getVariableConditionalAccess().getSourceVariableCrossReference_1_0());
				}
			)
		)
		otherlv_2=Is
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableConditionalAccess().getIsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_3_0());
				}
				lv_operator_3_0=ruleBOOLEAN_OPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableConditionalRule());
					}
					set(
						$current,
						"operator",
						lv_operator_3_0,
						"xtext.FactoryLogicLang.BOOLEAN_OPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_4_0_0());
					}
					lv_comparison_const_4_0=ruleCONST_VARIABLES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableConditionalRule());
						}
						set(
							$current,
							"comparison_const",
							lv_comparison_const_4_0,
							"xtext.FactoryLogicLang.CONST_VARIABLES");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableConditionalAccess().getComparison_colorCOLOREnumRuleCall_4_1_0());
					}
					lv_comparison_color_5_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableConditionalRule());
						}
						set(
							$current,
							"comparison_color",
							lv_comparison_color_5_0,
							"xtext.FactoryLogicLang.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_comparison_int_6_0=RULE_INT
					{
						newLeafNode(lv_comparison_int_6_0, grammarAccess.getVariableConditionalAccess().getComparison_intINTTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableConditionalRule());
						}
						setWithLastConsumed(
							$current,
							"comparison_int",
							lv_comparison_int_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_7=Then
		{
			newLeafNode(otherlv_7, grammarAccess.getVariableConditionalAccess().getThenKeyword_5());
		}
		this_BEGIN_8=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_8, grammarAccess.getVariableConditionalAccess().getBEGINTerminalRuleCall_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableConditionalAccess().getLogicsLogicParserRuleCall_7_0());
				}
				lv_logics_9_0=ruleLogic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableConditionalRule());
					}
					add(
						$current,
						"logics",
						lv_logics_9_0,
						"xtext.FactoryLogicLang.Logic");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_10=RULE_END
		{
			newLeafNode(this_END_10, grammarAccess.getVariableConditionalAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleNumberConditional
entryRuleNumberConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberConditionalRule()); }
	iv_ruleNumberConditional=ruleNumberConditional
	{ $current=$iv_ruleNumberConditional.current; }
	EOF;

// Rule NumberConditional
ruleNumberConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=If
		{
			newLeafNode(otherlv_0, grammarAccess.getNumberConditionalAccess().getIfKeyword_0());
		}
		(
			(
				lv_source_int_1_0=RULE_INT
				{
					newLeafNode(lv_source_int_1_0, grammarAccess.getNumberConditionalAccess().getSource_intINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberConditionalRule());
					}
					setWithLastConsumed(
						$current,
						"source_int",
						lv_source_int_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2=Is
		{
			newLeafNode(otherlv_2, grammarAccess.getNumberConditionalAccess().getIsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumberConditionalAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_3_0());
				}
				lv_operator_3_0=ruleBOOLEAN_OPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumberConditionalRule());
					}
					set(
						$current,
						"operator",
						lv_operator_3_0,
						"xtext.FactoryLogicLang.BOOLEAN_OPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=Equal
		{
			newLeafNode(otherlv_4, grammarAccess.getNumberConditionalAccess().getEqualKeyword_4());
		}
		otherlv_5=To
		{
			newLeafNode(otherlv_5, grammarAccess.getNumberConditionalAccess().getToKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNumberConditionalAccess().getComparison_constCONST_VARIABLESEnumRuleCall_6_0_0());
					}
					lv_comparison_const_6_0=ruleCONST_VARIABLES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumberConditionalRule());
						}
						set(
							$current,
							"comparison_const",
							lv_comparison_const_6_0,
							"xtext.FactoryLogicLang.CONST_VARIABLES");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getNumberConditionalAccess().getComparison_colorCOLOREnumRuleCall_6_1_0());
					}
					lv_comparison_color_7_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNumberConditionalRule());
						}
						set(
							$current,
							"comparison_color",
							lv_comparison_color_7_0,
							"xtext.FactoryLogicLang.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_comparison_int_8_0=RULE_INT
					{
						newLeafNode(lv_comparison_int_8_0, grammarAccess.getNumberConditionalAccess().getComparison_intINTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumberConditionalRule());
						}
						setWithLastConsumed(
							$current,
							"comparison_int",
							lv_comparison_int_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_9=Then
		{
			newLeafNode(otherlv_9, grammarAccess.getNumberConditionalAccess().getThenKeyword_7());
		}
		this_BEGIN_10=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_10, grammarAccess.getNumberConditionalAccess().getBEGINTerminalRuleCall_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumberConditionalAccess().getLogicsLogicParserRuleCall_9_0());
				}
				lv_logics_11_0=ruleLogic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumberConditionalRule());
					}
					add(
						$current,
						"logics",
						lv_logics_11_0,
						"xtext.FactoryLogicLang.Logic");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_12=RULE_END
		{
			newLeafNode(this_END_12, grammarAccess.getNumberConditionalAccess().getENDTerminalRuleCall_10());
		}
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=For
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getVariableLoopVariableParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleLoopVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"xtext.FactoryLogicLang.LoopVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=In
		{
			newLeafNode(otherlv_2, grammarAccess.getLoopAccess().getInKeyword_2());
		}
		(
			(
				lv_list_3_0=RULE_ID
				{
					newLeafNode(lv_list_3_0, grammarAccess.getLoopAccess().getListIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoopRule());
					}
					setWithLastConsumed(
						$current,
						"list",
						lv_list_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4=Of
			{
				newLeafNode(otherlv_4, grammarAccess.getLoopAccess().getOfKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoopRule());
						}
					}
					otherlv_5=RULE_STRING
					{
						newLeafNode(otherlv_5, grammarAccess.getLoopAccess().getSourceDeviceCrossReference_4_1_0());
					}
				)
			)
		)?
		otherlv_6=That
		{
			newLeafNode(otherlv_6, grammarAccess.getLoopAccess().getThatKeyword_5());
		}
		otherlv_7=Is
		{
			newLeafNode(otherlv_7, grammarAccess.getLoopAccess().getIsKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getOperatorBOOLEAN_OPERATOREnumRuleCall_7_0());
				}
				lv_operator_8_0=ruleBOOLEAN_OPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"operator",
						lv_operator_8_0,
						"xtext.FactoryLogicLang.BOOLEAN_OPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLoopAccess().getComparison_constCONST_VARIABLESEnumRuleCall_8_0_0());
					}
					lv_comparison_const_9_0=ruleCONST_VARIABLES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoopRule());
						}
						set(
							$current,
							"comparison_const",
							lv_comparison_const_9_0,
							"xtext.FactoryLogicLang.CONST_VARIABLES");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getLoopAccess().getComparison_colorCOLOREnumRuleCall_8_1_0());
					}
					lv_comparison_color_10_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoopRule());
						}
						set(
							$current,
							"comparison_color",
							lv_comparison_color_10_0,
							"xtext.FactoryLogicLang.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_comparison_int_11_0=RULE_INT
					{
						newLeafNode(lv_comparison_int_11_0, grammarAccess.getLoopAccess().getComparison_intINTTerminalRuleCall_8_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoopRule());
						}
						setWithLastConsumed(
							$current,
							"comparison_int",
							lv_comparison_int_11_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_12=Then
		{
			newLeafNode(otherlv_12, grammarAccess.getLoopAccess().getThenKeyword_9());
		}
		this_BEGIN_13=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_13, grammarAccess.getLoopAccess().getBEGINTerminalRuleCall_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getLogicsLogicParserRuleCall_11_0());
				}
				lv_logics_14_0=ruleLogic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					add(
						$current,
						"logics",
						lv_logics_14_0,
						"xtext.FactoryLogicLang.Logic");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_15=RULE_END
		{
			newLeafNode(this_END_15, grammarAccess.getLoopAccess().getENDTerminalRuleCall_12());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationAccess().getStorageMoveEmptySlotParserRuleCall_0());
		}
		this_StorageMoveEmptySlot_0=ruleStorageMoveEmptySlot
		{
			$current = $this_StorageMoveEmptySlot_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getStorageMoveSlotParserRuleCall_1());
		}
		this_StorageMoveSlot_1=ruleStorageMoveSlot
		{
			$current = $this_StorageMoveSlot_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getStorageMarkSlotParserRuleCall_2());
		}
		this_StorageMarkSlot_2=ruleStorageMarkSlot
		{
			$current = $this_StorageMarkSlot_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getStorageMoveVariableSlotParserRuleCall_3());
		}
		this_StorageMoveVariableSlot_3=ruleStorageMoveVariableSlot
		{
			$current = $this_StorageMoveVariableSlot_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getCameraScanParserRuleCall_4());
		}
		this_CameraScan_4=ruleCameraScan
		{
			$current = $this_CameraScan_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getCranePickupParserRuleCall_5());
		}
		this_CranePickup_5=ruleCranePickup
		{
			$current = $this_CranePickup_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getCraneDropParserRuleCall_6());
		}
		this_CraneDrop_6=ruleCraneDrop
		{
			$current = $this_CraneDrop_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStorageMoveEmptySlot
entryRuleStorageMoveEmptySlot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMoveEmptySlotRule()); }
	iv_ruleStorageMoveEmptySlot=ruleStorageMoveEmptySlot
	{ $current=$iv_ruleStorageMoveEmptySlot.current; }
	EOF;

// Rule StorageMoveEmptySlot
ruleStorageMoveEmptySlot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveEmptySlotRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getStorageMoveEmptySlotAccess().getDeviceStorageCrossReference_0_0());
				}
			)
		)
		otherlv_1=Move
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageMoveEmptySlotAccess().getMoveKeyword_1());
		}
		otherlv_2=Empty
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageMoveEmptySlotAccess().getEmptyKeyword_2());
		}
		otherlv_3=Slot
		{
			newLeafNode(otherlv_3, grammarAccess.getStorageMoveEmptySlotAccess().getSlotKeyword_3());
		}
		otherlv_4=To
		{
			newLeafNode(otherlv_4, grammarAccess.getStorageMoveEmptySlotAccess().getToKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveEmptySlotRule());
					}
				}
				otherlv_5=RULE_STRING
				{
					newLeafNode(otherlv_5, grammarAccess.getStorageMoveEmptySlotAccess().getDestinationStoragePositionParameterCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStorageMoveVariableSlot
entryRuleStorageMoveVariableSlot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMoveVariableSlotRule()); }
	iv_ruleStorageMoveVariableSlot=ruleStorageMoveVariableSlot
	{ $current=$iv_ruleStorageMoveVariableSlot.current; }
	EOF;

// Rule StorageMoveVariableSlot
ruleStorageMoveVariableSlot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveVariableSlotRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getStorageMoveVariableSlotAccess().getDeviceStorageCrossReference_0_0());
				}
			)
		)
		otherlv_1=Move
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageMoveVariableSlotAccess().getMoveKeyword_1());
		}
		otherlv_2=Slot
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageMoveVariableSlotAccess().getSlotKeyword_2());
		}
		otherlv_3=Of
		{
			newLeafNode(otherlv_3, grammarAccess.getStorageMoveVariableSlotAccess().getOfKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveVariableSlotRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getStorageMoveVariableSlotAccess().getPositionVariableCrossReference_4_0());
				}
			)
		)
		otherlv_5=To
		{
			newLeafNode(otherlv_5, grammarAccess.getStorageMoveVariableSlotAccess().getToKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveVariableSlotRule());
					}
				}
				otherlv_6=RULE_STRING
				{
					newLeafNode(otherlv_6, grammarAccess.getStorageMoveVariableSlotAccess().getDestinationStoragePositionParameterCrossReference_6_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStorageMoveSlot
entryRuleStorageMoveSlot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMoveSlotRule()); }
	iv_ruleStorageMoveSlot=ruleStorageMoveSlot
	{ $current=$iv_ruleStorageMoveSlot.current; }
	EOF;

// Rule StorageMoveSlot
ruleStorageMoveSlot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveSlotRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getStorageMoveSlotAccess().getDeviceStorageCrossReference_0_0());
				}
			)
		)
		otherlv_1=Move
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageMoveSlotAccess().getMoveKeyword_1());
		}
		otherlv_2=Slot
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageMoveSlotAccess().getSlotKeyword_2());
		}
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getStorageMoveSlotAccess().getAtKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveSlotRule());
					}
				}
				otherlv_4=RULE_STRING
				{
					newLeafNode(otherlv_4, grammarAccess.getStorageMoveSlotAccess().getPositionStoragePositionParameterCrossReference_4_0());
				}
			)
		)
		otherlv_5=To
		{
			newLeafNode(otherlv_5, grammarAccess.getStorageMoveSlotAccess().getToKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMoveSlotRule());
					}
				}
				otherlv_6=RULE_STRING
				{
					newLeafNode(otherlv_6, grammarAccess.getStorageMoveSlotAccess().getDestinationStoragePositionParameterCrossReference_6_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStorageMarkSlot
entryRuleStorageMarkSlot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMarkSlotRule()); }
	iv_ruleStorageMarkSlot=ruleStorageMarkSlot
	{ $current=$iv_ruleStorageMarkSlot.current; }
	EOF;

// Rule StorageMarkSlot
ruleStorageMarkSlot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMarkSlotRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getStorageMarkSlotAccess().getDeviceStorageCrossReference_0_0());
				}
			)
		)
		otherlv_1=Mark
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageMarkSlotAccess().getMarkKeyword_1());
		}
		otherlv_2=Slot
		{
			newLeafNode(otherlv_2, grammarAccess.getStorageMarkSlotAccess().getSlotKeyword_2());
		}
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getStorageMarkSlotAccess().getAtKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMarkSlotRule());
					}
				}
				otherlv_4=RULE_STRING
				{
					newLeafNode(otherlv_4, grammarAccess.getStorageMarkSlotAccess().getPositionStoragePositionParameterCrossReference_4_0());
				}
			)
		)
		otherlv_5=As
		{
			newLeafNode(otherlv_5, grammarAccess.getStorageMarkSlotAccess().getAsKeyword_5());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStorageMarkSlotRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getStorageMarkSlotAccess().getComparison_variableVariableCrossReference_6_0_0());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStorageMarkSlotAccess().getComparison_constCONST_VARIABLESEnumRuleCall_6_1_0());
					}
					lv_comparison_const_7_0=ruleCONST_VARIABLES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStorageMarkSlotRule());
						}
						set(
							$current,
							"comparison_const",
							lv_comparison_const_7_0,
							"xtext.FactoryLogicLang.CONST_VARIABLES");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStorageMarkSlotAccess().getComparison_colorCOLOREnumRuleCall_6_2_0());
					}
					lv_comparison_color_8_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStorageMarkSlotRule());
						}
						set(
							$current,
							"comparison_color",
							lv_comparison_color_8_0,
							"xtext.FactoryLogicLang.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_comparison_int_9_0=RULE_INT
					{
						newLeafNode(lv_comparison_int_9_0, grammarAccess.getStorageMarkSlotAccess().getComparison_intINTTerminalRuleCall_6_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStorageMarkSlotRule());
						}
						setWithLastConsumed(
							$current,
							"comparison_int",
							lv_comparison_int_9_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		(
			otherlv_10=In
			{
				newLeafNode(otherlv_10, grammarAccess.getStorageMarkSlotAccess().getInKeyword_7_0());
			}
			(
				(
					lv_quantity_11_0=RULE_INT
					{
						newLeafNode(lv_quantity_11_0, grammarAccess.getStorageMarkSlotAccess().getQuantityINTTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStorageMarkSlotRule());
						}
						setWithLastConsumed(
							$current,
							"quantity",
							lv_quantity_11_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStorageMarkSlotAccess().getMeasureTIMEEnumRuleCall_7_2_0());
					}
					lv_measure_12_0=ruleTIME
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStorageMarkSlotRule());
						}
						set(
							$current,
							"measure",
							lv_measure_12_0,
							"xtext.FactoryLogicLang.TIME");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCameraScan
entryRuleCameraScan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraScanRule()); }
	iv_ruleCameraScan=ruleCameraScan
	{ $current=$iv_ruleCameraScan.current; }
	EOF;

// Rule CameraScan
ruleCameraScan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCameraScanRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getCameraScanAccess().getDeviceCameraCrossReference_0_0());
				}
			)
		)
		otherlv_1=Scan
		{
			newLeafNode(otherlv_1, grammarAccess.getCameraScanAccess().getScanKeyword_1());
		}
		otherlv_2=Color
		{
			newLeafNode(otherlv_2, grammarAccess.getCameraScanAccess().getColorKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraScanAccess().getVariableGloablVariableParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleGloablVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraScanRule());
					}
					set(
						$current,
						"variable",
						lv_variable_3_0,
						"xtext.FactoryLogicLang.GloablVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLoopVariable
entryRuleLoopVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopVariableRule()); }
	iv_ruleLoopVariable=ruleLoopVariable
	{ $current=$iv_ruleLoopVariable.current; }
	EOF;

// Rule LoopVariable
ruleLoopVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Each
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopVariableAccess().getEachKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLoopVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoopVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGloablVariable
entryRuleGloablVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGloablVariableRule()); }
	iv_ruleGloablVariable=ruleGloablVariable
	{ $current=$iv_ruleGloablVariable.current; }
	EOF;

// Rule GloablVariable
ruleGloablVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Into
		{
			newLeafNode(otherlv_0, grammarAccess.getGloablVariableAccess().getIntoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGloablVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGloablVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCranePickup
entryRuleCranePickup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCranePickupRule()); }
	iv_ruleCranePickup=ruleCranePickup
	{ $current=$iv_ruleCranePickup.current; }
	EOF;

// Rule CranePickup
ruleCranePickup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCranePickupRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getCranePickupAccess().getDeviceCraneCrossReference_0_0());
				}
			)
		)
		otherlv_1=Pickup
		{
			newLeafNode(otherlv_1, grammarAccess.getCranePickupAccess().getPickupKeyword_1());
		}
		otherlv_2=Item
		{
			newLeafNode(otherlv_2, grammarAccess.getCranePickupAccess().getItemKeyword_2());
		}
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getCranePickupAccess().getAtKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCranePickupRule());
					}
				}
				otherlv_4=RULE_STRING
				{
					newLeafNode(otherlv_4, grammarAccess.getCranePickupAccess().getLocationCraneParameterCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleCraneDrop
entryRuleCraneDrop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneDropRule()); }
	iv_ruleCraneDrop=ruleCraneDrop
	{ $current=$iv_ruleCraneDrop.current; }
	EOF;

// Rule CraneDrop
ruleCraneDrop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneDropRule());
					}
				}
				otherlv_0=RULE_STRING
				{
					newLeafNode(otherlv_0, grammarAccess.getCraneDropAccess().getDeviceCraneCrossReference_0_0());
				}
			)
		)
		otherlv_1=Drop
		{
			newLeafNode(otherlv_1, grammarAccess.getCraneDropAccess().getDropKeyword_1());
		}
		otherlv_2=Item
		{
			newLeafNode(otherlv_2, grammarAccess.getCraneDropAccess().getItemKeyword_2());
		}
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getCraneDropAccess().getAtKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneDropRule());
					}
				}
				otherlv_4=RULE_STRING
				{
					newLeafNode(otherlv_4, grammarAccess.getCraneDropAccess().getLocationCraneParameterCrossReference_4_0());
				}
			)
		)
	)
;

// Rule COLOR
ruleCOLOR returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Red
			{
				$current = grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Blue
			{
				$current = grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Green
			{
				$current = grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule CONST_VARIABLES
ruleCONST_VARIABLES returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Full
			{
				$current = grammarAccess.getCONST_VARIABLESAccess().getFULLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCONST_VARIABLESAccess().getFULLEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Finished
			{
				$current = grammarAccess.getCONST_VARIABLESAccess().getFINISHEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCONST_VARIABLESAccess().getFINISHEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Empty
			{
				$current = grammarAccess.getCONST_VARIABLESAccess().getEMPTYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCONST_VARIABLESAccess().getEMPTYEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule BOOLEAN_OPERATOR
ruleBOOLEAN_OPERATOR returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Not
			{
				$current = grammarAccess.getBOOLEAN_OPERATORAccess().getNOTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBOOLEAN_OPERATORAccess().getNOTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=LessThan
			{
				$current = grammarAccess.getBOOLEAN_OPERATORAccess().getLESSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBOOLEAN_OPERATORAccess().getLESSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=GreaterThan
			{
				$current = grammarAccess.getBOOLEAN_OPERATORAccess().getGREATEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBOOLEAN_OPERATORAccess().getGREATEREnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule TIME
ruleTIME returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Seconds
			{
				$current = grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Second
			{
				$current = grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Minutes
			{
				$current = grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Minute
			{
				$current = grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4=Hours
			{
				$current = grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5=Hour
			{
				$current = grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5());
			}
		)
	)
;
